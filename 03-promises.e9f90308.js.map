{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,aAAcC,SAASC,cAAc,uBACrCC,YAAaF,SAASC,cAAc,sBACpCE,SAAUH,SAASC,cAAc,wBACjCG,OAAQJ,SAASC,cAAc,UA2BjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAjCPT,EAAKM,OAAOW,iBAAiB,UAE7B,SAA+BC,GAC7BA,EAAIC,iBAMJ,IAJA,IAAMC,EAAQC,OAAOrB,EAAKC,aAAaqB,OACjCC,EAAYF,OAAOrB,EAAKI,YAAYkB,OACpCE,EAASH,OAAOrB,EAAKK,SAASiB,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAckB,EAAI,EAAGL,EAAQG,EAAYE,GACtCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelayEl: document.querySelector('input[name=\"delay\"]'),\n  delayStepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onClickCreatePromises);\n\nfunction onClickCreatePromises(evt) {\n  evt.preventDefault();\n\n  const delay = Number(refs.firstDelayEl.value);\n  const delayStep = Number(refs.delayStepEl.value);\n  const amount = Number(refs.amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + delayStep * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelayEl","document","querySelector","delayStepEl","amountEl","formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","delayStep","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e9f90308.js.map"}